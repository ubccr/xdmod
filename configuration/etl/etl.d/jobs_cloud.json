{
    "defaults": {

        "global": {
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                },
                "destination": {
                    "type": "mysql",
                    "name": "Cloud DB",
                    "config": "datawarehouse",
                    "schema": "modw_cloud",
                    "create_schema_if_not_exists": true
                }
            }
        },

        "jobs-cloud": {
            "namespace": "ETL\\Ingestor",
            "options_class": "IngestorOptions",
            "enabled": true,
            "truncate_destination": false
        }
    },

    "#": "Current Cloud job ingestion",

    "jobs-cloud": [
        {
            "name": "CloudTableManagement",
            "class": "ManageTables",
            "description": "Manage job tables not managed by other actions",
            "namespace": "ETL\\Maintenance",
            "options_class": "MaintenanceOptions",
            "definition_file_list": [
                "cloud/cloud_resource_metadata.json",
                "cloud/job_record_event.json"
            ]
        },
        {
            "name": "CloudAssetTypeInitializer",
            "description": "Initialize cloud asset types including unknown",
            "class": "StructuredFileIngestor",
            "definition_file": "cloud/asset_type.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "Cloud asset types",
                    "path": "cloud/asset_type.json"
                }
            }
        },
        {
            "name": "CloudEventTypeInitializer",
            "description": "Initialize cloud event types including unknown",
            "class": "StructuredFileIngestor",
            "definition_file": "cloud/event_type.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "Cloud event types",
                    "path": "cloud/event_type.json"
                }
            }
        },
        {
            "name": "CloudRecordTypeInitializer",
            "description": "Initialize cloud record types including unknown",
            "class": "StructuredFileIngestor",
            "definition_file": "cloud/record_type.json",
            "endpoints": {
                "source": {
                    "type": "jsonfile",
                    "name": "Cloud record types",
                    "path": "cloud/record_type.json"
                }
            }
        },
        {
            "#": "Note that any actions run after this cannot truncate the tables set here",

            "name": "CloudUnknownDimensionInitializer",
            "description": "Initialize values for unknown hosts, images, etc. that are specific to a resource",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/initialize_unknown_dimension_values.def.json",
            "endpoints": {
                "source": {
                    "type": "mysql",
                    "name": "XDMoD DW",
                    "config": "datawarehouse",
                    "schema": "modw"
                }
            }
        },
        {
            "name": "RawCloudEventLogIngestor",
            "description": "Raw cloud instance data from log files",
            "class": "StructuredFileIngestor",
            "definition_file": "cloud/raw_cloud_job_logs.def.json",
            "truncate_destination": true,
            "endpoints": {
                "source": {
                    "type": "directoryscanner",
                    "name": "Eucalyptus event logs",
                    "path": "cloud/ccr-cbls-2",
                    "directory_pattern": "/[0-9]{4}-[0-9]{2}-[0-9]{2}/",
                    "file_pattern": "/acct\\.json/",
                    "#": "Recursion depth is relative to the path",
                    "recursion_depth": 1,
                    "# last_modified_start": "now - 30 days",
                    "handler": {
                        "type": "jsonfile",
                        "record_separator": "\n",
                        "record_schema_path": "cloud/event.schema.json",
                        "#": "Explicitly specify field names as some are optional",
                        "field_names": [
                            "instance_id",
                            "event_type",
                            "event_data",
                            "event_time",
                            "record_type",
                            "account",
                            "node_controller",
                            "image_type",
                            "instance_type",
                            "root_type",
                            "block_devices",
                            "public_ip",
                            "private_ip"
                        ]
                    }
                }
            }
        },
        {
            "#": "An event can specify an array of block devices associated with it.  Re-process",
            "#": "the log files and for each event containing block devices, transform these each of",
            "#": "these device array elements into individual devive records with select event",
            "#": "metadata.",

            "name": "RawCloudVolumeIngestor",
            "description": "Raw block devices associated with an event",
            "class": "StructuredFileIngestor",
            "definition_file": "cloud/raw_volume.def.json",
            "truncate_destination": true,
            "endpoints": {
                "source": {
                    "type": "directoryscanner",
                    "name": "Eucalyptus volume logs",
                    "path": "cloud/ccr-cbls-2",
                    "directory_pattern": "/[0-9]{4}-[0-9]{2}-[0-9]{2}/",
                    "file_pattern": "/acct\\.json/",
                    "#": "Recursion depth is relative to the path",
                    "recursion_depth": 1,
                    "# last_modified_start": "now - 30 days",
                    "handler": {
                        "type": "jsonfile",
                        "record_separator": "\n",
                        "record_schema_path": "cloud/event.schema.json",
                        "#": "Return one record for each element in the block_devices array.",
                        "#": ".block_devices[] returns a result for each block_device array element",
                        "#": "so use this to create one object per element and then move the keys",
                        "#": "from nested the block_devices object into the main object",
                        "filters": [{
                            "type": "external",
                            "name": "jq",
                            "path": "jq",
                            "arguments" :"-c 'select(.block_devices) | {instance_id: .instance_id, account_number: .account, event_time: .event_time, bd: .block_devices[]} | foreach .bd as $i (.; . + $i) | del(.bd)'"
                        }]
                    }
                }
            }
        },
        {
            "name": "CloudAccountIngestor",
            "description": "Cloud account data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/account.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudHostIngestor",
            "description": "Cloud host data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/host.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudImageIngestor",
            "description": "Cloud image data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/image.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudInstanceTypeIngestor",
            "description": "Cloud instance type data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/instance_type.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudInstanceIngestor",
            "description": "Cloud instance data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/instance.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudVolumeAssetIngestor",
            "description": "Cloud attachable volume (block device) data from raw logs",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/volume.def.json",
            "optimize_query": true
        },
        {
            "name": "CloudPostIngestUpdates",
            "description": "Post-ingest updates for massaging data",
            "namespace": "ETL\\Maintenance",
            "options_class": "MaintenanceOptions",
            "class": "ExecuteSql",
            "sql_file_list": [
                "cloud/post_ingest_updates.sql"
            ]
        },
        {
            "#": "Events must be ingested after all other dimensions",
            "name": "CloudStagingEventIngestor",
            "description": "Staging data for cloud events",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/staging_event.def.json",
            "optimize_query": true
        },
        {
            "#": "Instance data must be ingested after staging events",
            "name": "CloudRootVolumeAssetIngestor",
            "description": "Infer instance root volume data from instance types",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/root_volume.def.json",
            "optimize_query": true
        },
        {
            "#": "Instance data must be ingested after staging events",
            "name": "CloudIpAddressAssetIngestor",
            "description": "Cloud attachable IP address data from staging events",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/ip_address.def.json",
            "optimize_query": true
        },
        {
            "#": "Instance data must be ingested after staging events",
            "name": "CloudEventIngestor",
            "description": "Cloud event and instance data",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/event.def.json",
            "optimize_query": true
        },
        {
            "#": "Asset data must be ingested after events",
            "name": "CloudEventAssetRootVolumeIngestor",
            "description": "Cloud instance root volume assets associated with START events",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/event_asset_root_volume.def.json",
            "optimize_query": true
        },
        {
            "#": "Asset data must be ingested after events",
            "name": "CloudEventAssetIngestor",
            "description": "Cloud assets associated with events",
            "class": "DatabaseIngestor",
            "definition_file": "cloud/event_asset.def.json",
            "optimize_query": true
        }
    ]
}
