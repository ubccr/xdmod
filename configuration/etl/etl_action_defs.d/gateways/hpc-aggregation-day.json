{
    "#": "BY DAY Aggregation of HPC job records and tasks ingested from the XDCDB, for Gateways",
    "table_definition": {
        "$ref": "${table_definition_dir}/jobs/xdw/jobfact_by_day.json#/table_definition"
    },

    "#": "The aggregation period query determines which periods need to be aggregated based on added or modified",
    "#": "records. The overseer_restrictions block specifies the criteria for selecting periods requiring",
    "#": "aggregation. If this clause is not specified or no restrictions match then all records will be",
    "#": "considered. The first table specified in source_query.joins will be used to determine periods that",
    "#": "need aggregation.",
    "aggregation_period_query": {
        "$ref": "${action_definition_dir}/jobs/hpc-aggregation-day.json#/aggregation_period_query"
    },

    "#": "The destination query block allows us to specify overseer restrictions that apply to operations on",
    "#": "the destination table (e.g., deleting records from the table during aggregation).  If no restrictions",
    "#": "are specified then the entire aggregation period will be deleted. Note that if there is a restriction",
    "#": "on the source_query block it is possible to delete an aggregation period from the destination table",
    "#": "with no restictions and replace it with aggregated data that has been restricted.",
    "destination_query": {
        "$ref": "${action_definition_dir}/jobs/hpc-aggregation-day.json#/destination_query"
    },
    "source_query": {
        "$ref-with-overwrite": "${action_definition_dir}/jobs/hpc-aggregation-day.json#/source_query",
        "$overwrite": {
            "joins": [
                {
                    "name": "job_tasks",
                    "schema": "${SOURCE_SCHEMA}",
                    "alias": "task"
                },
                {
                    "name": "job_records",
                    "schema": "${SOURCE_SCHEMA}",
                    "alias": "record",
                    "on": "record.job_record_id = task.job_record_id",
                    "type": "STRAIGHT"
                },
                {
                    "name": "resourcefact",
                    "schema": "${UTILITY_SCHEMA}",
                    "alias": "requested_resource",
                    "on": "requested_resource.id = record.resource_id"
                },
                {
                    "name": "resourcefact",
                    "schema": "${UTILITY_SCHEMA}",
                    "alias": "task_resource",
                    "on": "task_resource.id = task.resource_id"
                },
                {
                    "name": "gateway",
                    "schema": "modw_gateways",
                    "alias": "gw_task",
                    "on": "gw_task.proxy_person_id = task.person_id"
                }
            ]
        }
    }
}
