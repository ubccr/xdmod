{
    "#": "We want to be able to represent an unknown value for dimensions that have a composite",
    "#": "key such as (resource, host). Since the key depends on dynamic resource information",
    "#": "we cannot initialize from a constant file. Prior to ingesting the dimension data, query",
    "#": "the resources and ensure that each dimension has an 'unknown' entry with an id of -1",
    "#": "for each resource.  For example (resource_id, -1).",

    "#": "Note that when using an AUTO_INCREMENT on a PRIMARY column, we can use a signed int",
    "#": "and initialize the data with a value of -1 for unknowns. However, when using an",
    "#": "AUTO_INCREMENT on a SECONDARY column we cannot initialize the value of the AUTO_INCREMENT",
    "#": "to a negative number or MySQL will throw an Error 1264 'value out of range for column'",
    "#": "but provide the name of the table as the column and a seemingly unrelated row number.",
    "#": "This is why we use 1 for the unknown key of AUTO DISCOVERED items where the resource is",
    "#": "the first part of the key and not -1. We will continue to use -1 for global unknowns.",

    "table_definition": [
        {
            "$ref": "${table_definition_dir}/cloud_common/account.json#/table_definition"
        },
        {
            "$ref": "${table_definition_dir}/cloud_common/host.json#/table_definition"
        },
        {
            "$ref": "${table_definition_dir}/cloud_common/image.json#/table_definition"
        },
        {
            "$ref": "${table_definition_dir}/cloud_common/instance.json#/table_definition"
        },
        {
            "$ref": "${table_definition_dir}/cloud_common/instance_type.json#/table_definition"
        }
    ],

    "source_query": {
        "records": {
            "resource_id": "rf.id",
            "unknown_id": 1,
            "unknown_key": "'unknown'",
            "unknown_display": "'Unknown'"
        },

        "joins": [
            {
                "name": "resourcefact",
                "schema": "${SOURCE_SCHEMA}",
                "alias": "rf"
            }
        ],

        "#": "Limit the resources to DIC, and Cloud",

        "where": [
            "resourcetype_id IN (3, 5)"
        ]
    },

    "destination_record_map": {
        "account": {
            "resource_id": "resource_id",
            "account_id": "unknown_id",
            "provider_account": "unknown_key",
            "display": "unknown_display"
        },
        "host": {
            "resource_id": "resource_id",
            "host_id": "unknown_id",
            "hostname": "unknown_key"
        },
        "image": {
            "resource_id": "resource_id",
            "image_id": "unknown_id",
            "image": "unknown_key"
        },
        "instance": {
            "resource_id": "resource_id",
            "instance_id": "unknown_id",
            "account_id": "unknown_id",
            "provider_identifier": "unknown_key"
        },
        "instance_type": {
            "resource_id": "resource_id",
            "instance_type_id": "unknown_id",
            "instance_type": "unknown_key",
            "display": "unknown_display"
        }
    }
}
