<?php
/**
 * @package OpenXdmod
 * @subpackage Tests
 */

namespace Controllers;

use TestHarness\RegressionTestHelper;

/**
 * Test the usage explorer for jobs realm regressions.
 */
class UsageExplorerJobsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \RegressionTestHelper
     */
    private static $helper;

    /**
     * Create the helper and authenticate.
     */
    public static function setUpBeforeClass()
    {
        self::$helper = new RegressionTestHelper();
        self::$helper->authenticate();
    }

    /**
     * Log out and output any messages generated by tests.
     */
    public static function tearDownAfterClass()
    {
        self::$helper->logout();
        self::$helper->outputMessages();
    }

    /**
     * Test usage explorer CSV export.
     *
     * @group regression
     * @group UsageExplorer
     * @dataProvider csvExportProvider
     */
    public function testCsvExport($testName, $input, $expectedFile, $userRole)
    {
        $this->assertTrue(self::$helper->checkCsvExport($testName, $input, $expectedFile, $userRole));
    }

    public function csvExportProvider()
    {
        $statistics = [
            'active_person_count',
            'active_pi_count',
            'active_resource_count',
            'avg_cpu_hours',
            'avg_job_size_weighted_by_cpu_hours',
            'avg_node_hours',
            'avg_processors',
            'avg_waitduration_hours',
            'avg_wallduration_hours',
            'expansion_factor',
            'job_count',
            'max_processors',
            'min_processors',
            'normalized_avg_processors',
            'running_job_count',
            'started_job_count',
            'submitted_job_count',
            'total_cpu_hours',
            'total_node_hours',
            'total_waitduration_hours',
            'total_wallduration_hours',
            'utilization'
        ];

        $groupBys = [
            'fieldofscience',
            'jobsize',
            'jobwalltime',
            'jobwaittime',
            'nodecount',
            'none',
            'nsfdirectorate',
            'parentscience',
            'person',
            'pi',
            'queue',
            'resource',
            'resource_type',
            'username'
        ];

        $settings = [
            'realm' => ['Jobs'],
            'dataset_type' => ['aggregate', 'timeseries'],
            'statistic' => $statistics,
            'group_by' => $groupBys,
            'aggregation_unit' => ['Day', 'Month', 'Quarter', 'Year']
        ];

        return RegressionTestHelper::generateTests($settings);
    }
}
